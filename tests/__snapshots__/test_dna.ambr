# serializer version: 1
# name: TestOXDNAReading.test_comparing_topologies[top_new]
  array([[ 1,  2],
         [ 2,  3],
         [ 3,  4],
         [ 4,  5],
         [ 5,  6],
         [ 6,  7],
         [ 7,  8],
         [ 8,  9],
         [ 9, 10],
         [10, 11]], dtype=int32)
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new].1
  array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new].2
  array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new].3
  array([42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new_custom]
  array([[ 5,  6],
         [ 6,  7],
         [ 7,  8],
         [ 8,  9],
         [ 9, 10],
         [10, 11]], dtype=int32)
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new_custom].1
  array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new_custom].2
  array([8., 8., 8., 8., 8., 8., 9., 9., 9., 9., 9., 9.])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_new_custom].3
  array([42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_old]
  array([[ 0,  1],
         [ 1,  2],
         [ 2,  3],
         [ 3,  4],
         [ 4,  5],
         [ 6,  7],
         [ 7,  8],
         [ 8,  9],
         [ 9, 10],
         [10, 11]], dtype=int32)
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_old].1
  array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_old].2
  array([1., 1., 1., 1., 1., 1., 2., 2., 2., 2., 2., 2.])
# ---
# name: TestOXDNAReading.test_comparing_topologies[top_old].3
  array([42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42])
# ---
# name: TestOXDNAReading.test_topo_reading
  Topology(
    attrs=list([
      Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      Resids(
        attrname='resids',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resid',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([5], dtype=object),
        namedict=dict({
          5: 0,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], dtype=object),
      ),
      Resnames(
        attrname='resnames',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array(['G', 'T', 'C', 'A'], dtype=object),
        namedict=dict({
          'A': 3,
          'C': 2,
          'G': 0,
          'T': 1,
        }),
        nmidx=array([0, 1, 1, 0, 2, 0, 2, 0, 2, 3, 3, 2]),
        per_object='residue',
        singledoc=None,
        singular='resname',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            tuple(
              'sequence',
              'Resnames.sequence(self, **kwargs)',
            ),
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array(['G', 'T', 'T', 'G', 'C', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
      ),
      Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            1,
            2,
          ),
          tuple(
            2,
            3,
          ),
          tuple(
            3,
            4,
          ),
          tuple(
            4,
            5,
          ),
          tuple(
            5,
            6,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
    ]),
    bonds=Bonds(
      attrname='bonds',
      dtype=None,
      groupdoc=None,
      is_guessed=list([
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
      ]),
      order=list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      per_object=None,
      singledoc=None,
      singular='bonds',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
          tuple(
            'bonded_atoms',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragment',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindex',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          tuple(
            'fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindices',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'n_fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'intra_bonds',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      types=list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      values=list([
        tuple(
          1,
          2,
        ),
        tuple(
          2,
          3,
        ),
        tuple(
          3,
          4,
        ),
        tuple(
          4,
          5,
        ),
        tuple(
          5,
          6,
        ),
        tuple(
          6,
          7,
        ),
        tuple(
          7,
          8,
        ),
        tuple(
          8,
          9,
        ),
        tuple(
          9,
          10,
        ),
        tuple(
          10,
          11,
        ),
      ]),
    ),
    chainIDs=ChainIDs(
      attrname='chainIDs',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array([5], dtype=object),
      namedict=dict({
        5: 0,
      }),
      nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      per_object='atom',
      singledoc=None,
      singular='chainID',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], dtype=object),
    ),
    guessed_attributes=filter(
    ),
    ids=Atomids(
      attrname='ids',
      groupdoc=None,
      is_guessed=False,
      per_object='atom',
      singledoc=None,
      singular='id',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    indices=Atomindices(
      attrname='indices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='index',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    n_atoms=12,
    n_residues=12,
    n_segments=1,
    read_attributes=filter(
    ),
    resids=Resids(
      attrname='resids',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resid',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    resindices=Resindices(
      attrname='resindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='resindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    resnames=Resnames(
      attrname='resnames',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array(['G', 'T', 'C', 'A'], dtype=object),
      namedict=dict({
        'A': 3,
        'C': 2,
        'G': 0,
        'T': 1,
      }),
      nmidx=array([0, 1, 1, 0, 2, 0, 2, 0, 2, 3, 3, 2]),
      per_object='residue',
      singledoc=None,
      singular='resname',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          tuple(
            'sequence',
            'Resnames.sequence(self, **kwargs)',
          ),
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array(['G', 'T', 'T', 'G', 'C', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
    ),
    resnums=Resnums(
      attrname='resnums',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resnum',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    segindices=Segindices(
      attrname='segindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='segindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
        <class 'MDAnalysis.core.groups.Segment'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    tt=TransTable(
      RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
      SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      size=tuple(
        12,
        12,
        1,
      ),
    ),
  )
# ---
# name: TestOXDNAReading.test_topo_reading.1
  Topology(
    attrs=list([
      Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
      ),
      Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
      ),
      Resids(
        attrname='resids',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resid',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
      ),
      ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([1, 2], dtype=object),
        namedict=dict({
          1: 0,
          2: 1,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], dtype=object),
      ),
      Resnames(
        attrname='resnames',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array(['G', 'C', 'T', 'A'], dtype=object),
        namedict=dict({
          'A': 3,
          'C': 1,
          'G': 0,
          'T': 2,
        }),
        nmidx=array([0, 1, 0, 2, 2, 0, 1, 0, 1, 3, 3, 1]),
        per_object='residue',
        singledoc=None,
        singular='resname',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            tuple(
              'sequence',
              'Resnames.sequence(self, **kwargs)',
            ),
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array(['G', 'C', 'G', 'T', 'T', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
      ),
      Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            0,
            1,
          ),
          tuple(
            1,
            2,
          ),
          tuple(
            2,
            3,
          ),
          tuple(
            3,
            4,
          ),
          tuple(
            4,
            5,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
          tuple(
            0,
            1,
          ),
          tuple(
            1,
            2,
          ),
          tuple(
            2,
            3,
          ),
          tuple(
            3,
            4,
          ),
          tuple(
            4,
            5,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
    ]),
    bonds=Bonds(
      attrname='bonds',
      dtype=None,
      groupdoc=None,
      is_guessed=list([
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
        False,
      ]),
      order=list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      per_object=None,
      singledoc=None,
      singular='bonds',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
          tuple(
            'bonded_atoms',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragment',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindex',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          tuple(
            'fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindices',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'n_fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'intra_bonds',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      types=list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      values=list([
        tuple(
          0,
          1,
        ),
        tuple(
          1,
          2,
        ),
        tuple(
          2,
          3,
        ),
        tuple(
          3,
          4,
        ),
        tuple(
          4,
          5,
        ),
        tuple(
          6,
          7,
        ),
        tuple(
          7,
          8,
        ),
        tuple(
          8,
          9,
        ),
        tuple(
          9,
          10,
        ),
        tuple(
          10,
          11,
        ),
        tuple(
          0,
          1,
        ),
        tuple(
          1,
          2,
        ),
        tuple(
          2,
          3,
        ),
        tuple(
          3,
          4,
        ),
        tuple(
          4,
          5,
        ),
        tuple(
          6,
          7,
        ),
        tuple(
          7,
          8,
        ),
        tuple(
          8,
          9,
        ),
        tuple(
          9,
          10,
        ),
        tuple(
          10,
          11,
        ),
      ]),
    ),
    chainIDs=ChainIDs(
      attrname='chainIDs',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array([1, 2], dtype=object),
      namedict=dict({
        1: 0,
        2: 1,
      }),
      nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
      per_object='atom',
      singledoc=None,
      singular='chainID',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], dtype=object),
    ),
    guessed_attributes=filter(
    ),
    ids=Atomids(
      attrname='ids',
      groupdoc=None,
      is_guessed=False,
      per_object='atom',
      singledoc=None,
      singular='id',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
    ),
    indices=Atomindices(
      attrname='indices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='index',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    n_atoms=12,
    n_residues=12,
    n_segments=1,
    read_attributes=filter(
    ),
    resids=Resids(
      attrname='resids',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resid',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
    ),
    resindices=Resindices(
      attrname='resindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='resindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    resnames=Resnames(
      attrname='resnames',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array(['G', 'C', 'T', 'A'], dtype=object),
      namedict=dict({
        'A': 3,
        'C': 1,
        'G': 0,
        'T': 2,
      }),
      nmidx=array([0, 1, 0, 2, 2, 0, 1, 0, 1, 3, 3, 1]),
      per_object='residue',
      singledoc=None,
      singular='resname',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          tuple(
            'sequence',
            'Resnames.sequence(self, **kwargs)',
          ),
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array(['G', 'C', 'G', 'T', 'T', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
    ),
    resnums=Resnums(
      attrname='resnums',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resnum',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
    ),
    segindices=Segindices(
      attrname='segindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='segindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
        <class 'MDAnalysis.core.groups.Segment'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    tt=TransTable(
      RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
      SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      size=tuple(
        12,
        12,
        1,
      ),
    ),
  )
# ---
# name: TestOXDNAReading.test_topo_reading.2
  Topology(
    attrs=list([
      Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      Resids(
        attrname='resids',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resid',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([8, 9], dtype=object),
        namedict=dict({
          8: 0,
          9: 1,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9], dtype=object),
      ),
      Resnames(
        attrname='resnames',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array(['G', 'T', '13', 'C', '-10', 'A'], dtype=object),
        namedict=dict({
          '-10': 4,
          '13': 2,
          'A': 5,
          'C': 3,
          'G': 0,
          'T': 1,
        }),
        nmidx=array([0, 1, 2, 0, 3, 0, 3, 0, 3, 4, 5, 3]),
        per_object='residue',
        singledoc=None,
        singular='resname',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            tuple(
              'sequence',
              'Resnames.sequence(self, **kwargs)',
            ),
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array(['G', 'T', '13', 'G', 'C', 'G', 'C', 'G', 'C', '-10', 'A', 'C'],
        dtype=object),
      ),
      Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            5,
            6,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
    ]),
    bonds=Bonds(
      attrname='bonds',
      dtype=None,
      groupdoc=None,
      is_guessed=list([
        False,
        False,
        False,
        False,
        False,
        False,
      ]),
      order=list([
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      per_object=None,
      singledoc=None,
      singular='bonds',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
          tuple(
            'bonded_atoms',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragment',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindex',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          tuple(
            'fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'fragindices',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'n_fragments',
            property(
              fdel=None,
              fset=None,
            ),
          ),
          tuple(
            'intra_bonds',
            property(
              fdel=None,
              fset=None,
            ),
          ),
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      types=list([
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      values=list([
        tuple(
          5,
          6,
        ),
        tuple(
          6,
          7,
        ),
        tuple(
          7,
          8,
        ),
        tuple(
          8,
          9,
        ),
        tuple(
          9,
          10,
        ),
        tuple(
          10,
          11,
        ),
      ]),
    ),
    chainIDs=ChainIDs(
      attrname='chainIDs',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array([8, 9], dtype=object),
      namedict=dict({
        8: 0,
        9: 1,
      }),
      nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
      per_object='atom',
      singledoc=None,
      singular='chainID',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9], dtype=object),
    ),
    guessed_attributes=filter(
    ),
    ids=Atomids(
      attrname='ids',
      groupdoc=None,
      is_guessed=False,
      per_object='atom',
      singledoc=None,
      singular='id',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    indices=Atomindices(
      attrname='indices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='index',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    n_atoms=12,
    n_residues=12,
    n_segments=1,
    read_attributes=filter(
    ),
    resids=Resids(
      attrname='resids',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resid',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    resindices=Resindices(
      attrname='resindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='resindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    resnames=Resnames(
      attrname='resnames',
      groupdoc=None,
      is_guessed=False,
      name_lookup=array(['G', 'T', '13', 'C', '-10', 'A'], dtype=object),
      namedict=dict({
        '-10': 4,
        '13': 2,
        'A': 5,
        'C': 3,
        'G': 0,
        'T': 1,
      }),
      nmidx=array([0, 1, 2, 0, 3, 0, 3, 0, 3, 4, 5, 3]),
      per_object='residue',
      singledoc=None,
      singular='resname',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          tuple(
            'sequence',
            'Resnames.sequence(self, **kwargs)',
          ),
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array(['G', 'T', '13', 'G', 'C', 'G', 'C', 'G', 'C', '-10', 'A', 'C'],
        dtype=object),
    ),
    resnums=Resnums(
      attrname='resnums',
      groupdoc=None,
      is_guessed=False,
      per_object='residue',
      singledoc=None,
      singular='resnum',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
      values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
    ),
    segindices=Segindices(
      attrname='segindices',
      groupdoc=None,
      is_guessed=False,
      per_object=None,
      singledoc=None,
      singular='segindex',
      target_classes=list([
        <class 'MDAnalysis.core.groups.AtomGroup'>,
        <class 'MDAnalysis.core.groups.ResidueGroup'>,
        <class 'MDAnalysis.core.groups.SegmentGroup'>,
        <class 'MDAnalysis.core.groups.Atom'>,
        <class 'MDAnalysis.core.groups.Residue'>,
        <class 'MDAnalysis.core.groups.Segment'>,
      ]),
      top=...,
      transplants=defaultdict({
        'Universe': list([
        ]),
        <class 'MDAnalysis.core.groups.Atom'>: list([
        ]),
        <class 'MDAnalysis.core.groups.AtomGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.GroupBase'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Residue'>: list([
        ]),
        <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        ]),
        <class 'MDAnalysis.core.groups.Segment'>: list([
        ]),
        <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
        ]),
      }),
    ),
    tt=TransTable(
      RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
      SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      size=tuple(
        12,
        12,
        1,
      ),
    ),
  )
# ---
# name: TestOXDNAReading.test_topo_reading.3
  Resids(
    attrname='resids',
    groupdoc=None,
    is_guessed=False,
    per_object='residue',
    singledoc=None,
    singular='resid',
    target_classes=list([
      <class 'MDAnalysis.core.groups.AtomGroup'>,
      <class 'MDAnalysis.core.groups.ResidueGroup'>,
      <class 'MDAnalysis.core.groups.SegmentGroup'>,
      <class 'MDAnalysis.core.groups.Atom'>,
      <class 'MDAnalysis.core.groups.Residue'>,
    ]),
    top=Topology(
      attrs=list([
        Atomids(
          attrname='ids',
          groupdoc=None,
          is_guessed=False,
          per_object='atom',
          singledoc=None,
          singular='id',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
        ),
        Resnums(
          attrname='resnums',
          groupdoc=None,
          is_guessed=False,
          per_object='residue',
          singledoc=None,
          singular='resnum',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
        ),
        ...,
        ChainIDs(
          attrname='chainIDs',
          groupdoc=None,
          is_guessed=False,
          name_lookup=array([1, 2], dtype=object),
          namedict=dict({
            1: 0,
            2: 1,
          }),
          nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
          per_object='atom',
          singledoc=None,
          singular='chainID',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], dtype=object),
        ),
        Resnames(
          attrname='resnames',
          groupdoc=None,
          is_guessed=False,
          name_lookup=array(['G', 'C', 'T', 'A'], dtype=object),
          namedict=dict({
            'A': 3,
            'C': 1,
            'G': 0,
            'T': 2,
          }),
          nmidx=array([0, 1, 0, 2, 2, 0, 1, 0, 1, 3, 3, 1]),
          per_object='residue',
          singledoc=None,
          singular='resname',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
              tuple(
                'sequence',
                'Resnames.sequence(self, **kwargs)',
              ),
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array(['G', 'C', 'G', 'T', 'T', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
        ),
        Atomindices(
          attrname='indices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='index',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Resindices(
          attrname='resindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='resindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Segindices(
          attrname='segindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='segindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
            <class 'MDAnalysis.core.groups.Segment'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Bonds(
          attrname='bonds',
          dtype=None,
          groupdoc=None,
          is_guessed=list([
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
            False,
          ]),
          order=list([
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
          ]),
          per_object=None,
          singledoc=None,
          singular='bonds',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
              tuple(
                'bonded_atoms',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragment',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindex',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
              tuple(
                'fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindices',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'n_fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'intra_bonds',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          types=list([
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
          ]),
          values=list([
            tuple(
              0,
              1,
            ),
            tuple(
              1,
              2,
            ),
            tuple(
              2,
              3,
            ),
            tuple(
              3,
              4,
            ),
            tuple(
              4,
              5,
            ),
            tuple(
              6,
              7,
            ),
            tuple(
              7,
              8,
            ),
            tuple(
              8,
              9,
            ),
            tuple(
              9,
              10,
            ),
            tuple(
              10,
              11,
            ),
            tuple(
              0,
              1,
            ),
            tuple(
              1,
              2,
            ),
            tuple(
              2,
              3,
            ),
            tuple(
              3,
              4,
            ),
            tuple(
              4,
              5,
            ),
            tuple(
              6,
              7,
            ),
            tuple(
              7,
              8,
            ),
            tuple(
              8,
              9,
            ),
            tuple(
              9,
              10,
            ),
            tuple(
              10,
              11,
            ),
          ]),
        ),
      ]),
      bonds=Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            0,
            1,
          ),
          tuple(
            1,
            2,
          ),
          tuple(
            2,
            3,
          ),
          tuple(
            3,
            4,
          ),
          tuple(
            4,
            5,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
          tuple(
            0,
            1,
          ),
          tuple(
            1,
            2,
          ),
          tuple(
            2,
            3,
          ),
          tuple(
            3,
            4,
          ),
          tuple(
            4,
            5,
          ),
          tuple(
            6,
            7,
          ),
          tuple(
            7,
            8,
          ),
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
      chainIDs=ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([1, 2], dtype=object),
        namedict=dict({
          1: 0,
          2: 1,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], dtype=object),
      ),
      guessed_attributes=filter(
      ),
      ids=Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
      ),
      indices=Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      read_attributes=filter(
      ),
      resids=...,
      resindices=Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      resnames=Resnames(
        attrname='resnames',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array(['G', 'C', 'T', 'A'], dtype=object),
        namedict=dict({
          'A': 3,
          'C': 1,
          'G': 0,
          'T': 2,
        }),
        nmidx=array([0, 1, 0, 2, 2, 0, 1, 0, 1, 3, 3, 1]),
        per_object='residue',
        singledoc=None,
        singular='resname',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            tuple(
              'sequence',
              'Resnames.sequence(self, **kwargs)',
            ),
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array(['G', 'C', 'G', 'T', 'T', 'G', 'C', 'G', 'C', 'A', 'A', 'C'],
        dtype=object),
      ),
      resnums=Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
      ),
      segindices=Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      tt=TransTable(
        RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
        SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
        n_atoms=12,
        n_residues=12,
        n_segments=1,
        size=tuple(
          12,
          12,
          1,
        ),
      ),
    ),
    transplants=defaultdict({
      'Universe': list([
      ]),
      <class 'MDAnalysis.core.groups.Atom'>: list([
      ]),
      <class 'MDAnalysis.core.groups.AtomGroup'>: list([
      ]),
      <class 'MDAnalysis.core.groups.GroupBase'>: list([
      ]),
      <class 'MDAnalysis.core.groups.Residue'>: list([
      ]),
      <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
      ]),
      <class 'MDAnalysis.core.groups.Segment'>: list([
      ]),
      <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
      ]),
    }),
    values=array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]),
  )
# ---
# name: TestOXDNAReading.test_topo_reading.4
  Resnames(
    attrname='resnames',
    groupdoc=None,
    is_guessed=False,
    name_lookup=array(['G', 'T', '13', 'C', '-10', 'A'], dtype=object),
    namedict=dict({
      '-10': 4,
      '13': 2,
      'A': 5,
      'C': 3,
      'G': 0,
      'T': 1,
    }),
    nmidx=array([0, 1, 2, 0, 3, 0, 3, 0, 3, 4, 5, 3]),
    per_object='residue',
    singledoc=None,
    singular='resname',
    target_classes=list([
      <class 'MDAnalysis.core.groups.AtomGroup'>,
      <class 'MDAnalysis.core.groups.ResidueGroup'>,
      <class 'MDAnalysis.core.groups.SegmentGroup'>,
      <class 'MDAnalysis.core.groups.Atom'>,
      <class 'MDAnalysis.core.groups.Residue'>,
    ]),
    top=Topology(
      attrs=list([
        Atomids(
          attrname='ids',
          groupdoc=None,
          is_guessed=False,
          per_object='atom',
          singledoc=None,
          singular='id',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
        ),
        Resnums(
          attrname='resnums',
          groupdoc=None,
          is_guessed=False,
          per_object='residue',
          singledoc=None,
          singular='resnum',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
        ),
        Resids(
          attrname='resids',
          groupdoc=None,
          is_guessed=False,
          per_object='residue',
          singledoc=None,
          singular='resid',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
        ),
        ChainIDs(
          attrname='chainIDs',
          groupdoc=None,
          is_guessed=False,
          name_lookup=array([0, 1], dtype=object),
          namedict=dict({
            0: 0,
            1: 1,
          }),
          nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
          per_object='atom',
          singledoc=None,
          singular='chainID',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        dtype=object),
        ),
        ...,
        Atomindices(
          attrname='indices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='index',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Resindices(
          attrname='resindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='resindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Segindices(
          attrname='segindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='segindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
            <class 'MDAnalysis.core.groups.Segment'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Bonds(
          attrname='bonds',
          dtype=None,
          groupdoc=None,
          is_guessed=list([
            False,
            False,
            False,
          ]),
          order=list([
            None,
            None,
            None,
          ]),
          per_object=None,
          singledoc=None,
          singular='bonds',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
              tuple(
                'bonded_atoms',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragment',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindex',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
              tuple(
                'fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindices',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'n_fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'intra_bonds',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          types=list([
            None,
            None,
            None,
          ]),
          values=list([
            tuple(
              8,
              9,
            ),
            tuple(
              9,
              10,
            ),
            tuple(
              10,
              11,
            ),
          ]),
        ),
      ]),
      bonds=Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
      chainIDs=ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([0, 1], dtype=object),
        namedict=dict({
          0: 0,
          1: 1,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        dtype=object),
      ),
      guessed_attributes=filter(
      ),
      ids=Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      indices=Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      read_attributes=filter(
      ),
      resids=Resids(
        attrname='resids',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resid',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      resindices=Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      resnames=...,
      resnums=Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      segindices=Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      tt=TransTable(
        RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
        SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
        n_atoms=12,
        n_residues=12,
        n_segments=1,
        size=tuple(
          12,
          12,
          1,
        ),
      ),
    ),
    transplants=defaultdict({
      'Universe': list([
      ]),
      <class 'MDAnalysis.core.groups.Atom'>: list([
      ]),
      <class 'MDAnalysis.core.groups.AtomGroup'>: list([
      ]),
      <class 'MDAnalysis.core.groups.GroupBase'>: list([
      ]),
      <class 'MDAnalysis.core.groups.Residue'>: list([
      ]),
      <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
        tuple(
          'sequence',
          'Resnames.sequence(self, **kwargs)',
        ),
      ]),
      <class 'MDAnalysis.core.groups.Segment'>: list([
      ]),
      <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
      ]),
    }),
    values=array(['G', 'T', '13', 'G', 'C', 'G', 'C', 'G', 'C', '-10', 'A', 'C'],
        dtype=object),
  )
# ---
# name: TestOXDNAReading.test_topo_reading.5
  Resids(
    attrname='resids',
    groupdoc=None,
    is_guessed=False,
    per_object='residue',
    singledoc=None,
    singular='resid',
    target_classes=list([
      <class 'MDAnalysis.core.groups.AtomGroup'>,
      <class 'MDAnalysis.core.groups.ResidueGroup'>,
      <class 'MDAnalysis.core.groups.SegmentGroup'>,
      <class 'MDAnalysis.core.groups.Atom'>,
      <class 'MDAnalysis.core.groups.Residue'>,
    ]),
    top=Topology(
      attrs=list([
        Atomids(
          attrname='ids',
          groupdoc=None,
          is_guessed=False,
          per_object='atom',
          singledoc=None,
          singular='id',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
        ),
        Resnums(
          attrname='resnums',
          groupdoc=None,
          is_guessed=False,
          per_object='residue',
          singledoc=None,
          singular='resnum',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
        ),
        ...,
        ChainIDs(
          attrname='chainIDs',
          groupdoc=None,
          is_guessed=False,
          name_lookup=array([0, 1], dtype=object),
          namedict=dict({
            0: 0,
            1: 1,
          }),
          nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
          per_object='atom',
          singledoc=None,
          singular='chainID',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        dtype=object),
        ),
        Resnames(
          attrname='resnames',
          groupdoc=None,
          is_guessed=False,
          name_lookup=array(['G', 'T', '13', 'C', '-10', 'A'], dtype=object),
          namedict=dict({
            '-10': 4,
            '13': 2,
            'A': 5,
            'C': 3,
            'G': 0,
            'T': 1,
          }),
          nmidx=array([0, 1, 2, 0, 3, 0, 3, 0, 3, 4, 5, 3]),
          per_object='residue',
          singledoc=None,
          singular='resname',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
              tuple(
                'sequence',
                'Resnames.sequence(self, **kwargs)',
              ),
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          values=array(['G', 'T', '13', 'G', 'C', 'G', 'C', 'G', 'C', '-10', 'A', 'C'],
        dtype=object),
        ),
        Atomindices(
          attrname='indices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='index',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Resindices(
          attrname='resindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='resindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Segindices(
          attrname='segindices',
          groupdoc=None,
          is_guessed=False,
          per_object=None,
          singledoc=None,
          singular='segindex',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
            <class 'MDAnalysis.core.groups.Residue'>,
            <class 'MDAnalysis.core.groups.Segment'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
        ),
        Bonds(
          attrname='bonds',
          dtype=None,
          groupdoc=None,
          is_guessed=list([
            False,
            False,
            False,
          ]),
          order=list([
            None,
            None,
            None,
          ]),
          per_object=None,
          singledoc=None,
          singular='bonds',
          target_classes=list([
            <class 'MDAnalysis.core.groups.AtomGroup'>,
            <class 'MDAnalysis.core.groups.ResidueGroup'>,
            <class 'MDAnalysis.core.groups.SegmentGroup'>,
            <class 'MDAnalysis.core.groups.Atom'>,
          ]),
          top=...,
          transplants=defaultdict({
            'Universe': list([
            ]),
            <class 'MDAnalysis.core.groups.Atom'>: list([
              tuple(
                'bonded_atoms',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragment',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindex',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.AtomGroup'>: list([
              tuple(
                'fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'fragindices',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'n_fragments',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
              tuple(
                'intra_bonds',
                property(
                  fdel=None,
                  fset=None,
                ),
              ),
            ]),
            <class 'MDAnalysis.core.groups.GroupBase'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Residue'>: list([
            ]),
            <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            ]),
            <class 'MDAnalysis.core.groups.Segment'>: list([
            ]),
            <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
            ]),
          }),
          types=list([
            None,
            None,
            None,
          ]),
          values=list([
            tuple(
              8,
              9,
            ),
            tuple(
              9,
              10,
            ),
            tuple(
              10,
              11,
            ),
          ]),
        ),
      ]),
      bonds=Bonds(
        attrname='bonds',
        dtype=None,
        groupdoc=None,
        is_guessed=list([
          False,
          False,
          False,
        ]),
        order=list([
          None,
          None,
          None,
        ]),
        per_object=None,
        singledoc=None,
        singular='bonds',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
            tuple(
              'bonded_atoms',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragment',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindex',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
            tuple(
              'fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'fragindices',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'n_fragments',
              property(
                fdel=None,
                fset=None,
              ),
            ),
            tuple(
              'intra_bonds',
              property(
                fdel=None,
                fset=None,
              ),
            ),
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        types=list([
          None,
          None,
          None,
        ]),
        values=list([
          tuple(
            8,
            9,
          ),
          tuple(
            9,
            10,
          ),
          tuple(
            10,
            11,
          ),
        ]),
      ),
      chainIDs=ChainIDs(
        attrname='chainIDs',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array([0, 1], dtype=object),
        namedict=dict({
          0: 0,
          1: 1,
        }),
        nmidx=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
        per_object='atom',
        singledoc=None,
        singular='chainID',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        dtype=object),
      ),
      guessed_attributes=filter(
      ),
      ids=Atomids(
        attrname='ids',
        groupdoc=None,
        is_guessed=False,
        per_object='atom',
        singledoc=None,
        singular='id',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      indices=Atomindices(
        attrname='indices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='index',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      n_atoms=12,
      n_residues=12,
      n_segments=1,
      read_attributes=filter(
      ),
      resids=...,
      resindices=Resindices(
        attrname='resindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='resindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      resnames=Resnames(
        attrname='resnames',
        groupdoc=None,
        is_guessed=False,
        name_lookup=array(['G', 'T', '13', 'C', '-10', 'A'], dtype=object),
        namedict=dict({
          '-10': 4,
          '13': 2,
          'A': 5,
          'C': 3,
          'G': 0,
          'T': 1,
        }),
        nmidx=array([0, 1, 2, 0, 3, 0, 3, 0, 3, 4, 5, 3]),
        per_object='residue',
        singledoc=None,
        singular='resname',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
            tuple(
              'sequence',
              'Resnames.sequence(self, **kwargs)',
            ),
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array(['G', 'T', '13', 'G', 'C', 'G', 'C', 'G', 'C', '-10', 'A', 'C'],
        dtype=object),
      ),
      resnums=Resnums(
        attrname='resnums',
        groupdoc=None,
        is_guessed=False,
        per_object='residue',
        singledoc=None,
        singular='resnum',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
        values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
      ),
      segindices=Segindices(
        attrname='segindices',
        groupdoc=None,
        is_guessed=False,
        per_object=None,
        singledoc=None,
        singular='segindex',
        target_classes=list([
          <class 'MDAnalysis.core.groups.AtomGroup'>,
          <class 'MDAnalysis.core.groups.ResidueGroup'>,
          <class 'MDAnalysis.core.groups.SegmentGroup'>,
          <class 'MDAnalysis.core.groups.Atom'>,
          <class 'MDAnalysis.core.groups.Residue'>,
          <class 'MDAnalysis.core.groups.Segment'>,
        ]),
        top=...,
        transplants=defaultdict({
          'Universe': list([
          ]),
          <class 'MDAnalysis.core.groups.Atom'>: list([
          ]),
          <class 'MDAnalysis.core.groups.AtomGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.GroupBase'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Residue'>: list([
          ]),
          <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
          ]),
          <class 'MDAnalysis.core.groups.Segment'>: list([
          ]),
          <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
          ]),
        }),
      ),
      tt=TransTable(
        RA=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), array([], dtype=int64),
         array([], dtype=int64), None], dtype=object),
        SR=array([array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]), None],
        dtype=object),
        n_atoms=12,
        n_residues=12,
        n_segments=1,
        size=tuple(
          12,
          12,
          1,
        ),
      ),
    ),
    transplants=defaultdict({
      'Universe': list([
      ]),
      <class 'MDAnalysis.core.groups.Atom'>: list([
      ]),
      <class 'MDAnalysis.core.groups.AtomGroup'>: list([
      ]),
      <class 'MDAnalysis.core.groups.GroupBase'>: list([
      ]),
      <class 'MDAnalysis.core.groups.Residue'>: list([
      ]),
      <class 'MDAnalysis.core.groups.ResidueGroup'>: list([
      ]),
      <class 'MDAnalysis.core.groups.Segment'>: list([
      ]),
      <class 'MDAnalysis.core.groups.SegmentGroup'>: list([
      ]),
    }),
    values=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11]),
  )
# ---
# name: TestOXDNAReading.test_univ_snapshot
  [[-2.7e-03  3.5e-03  6.1e-03]
   [-2.8e-03  3.7e-03  5.7e-03]
   [-2.8e-03  4.0e-03  5.3e-03]
   [-2.7e-03  4.3e-03  5.0e-03]
   [-2.3e-03  4.6e-03  4.6e-03]
   [-1.9e-03  4.6e-03  4.3e-03]
   [-1.5e-03  4.5e-03  4.0e-03]
   [-1.4e-03  4.4e-03  3.4e-03]
   [-1.4e-03  4.2e-03  3.0e-03]
   [-1.6e-03  4.1e-03  2.5e-03]
   [-1.9e-03  4.2e-03  2.0e-03]
   [-1.6e-03  3.0e-03  9.0e-04]
   [-1.2e-03  2.8e-03  7.2e-04]
   [-7.7e-04  2.8e-03  4.1e-04]
   [-4.2e-04  3.0e-03  8.1e-05]
   [-1.3e-04  3.4e-03 -1.3e-04]
   [ 1.4e-04  3.8e-03 -1.6e-04]
   [ 5.4e-04  4.2e-03 -1.9e-05]
   [ 7.2e-04  4.4e-03  3.7e-04]
   [ 1.1e-03  4.6e-03  7.6e-04]
   [ 1.4e-03  4.5e-03  1.1e-03]
   [ 1.9e-03  4.5e-03  1.2e-03]
   [ 2.1e-03  4.4e-03  5.7e-05]
   [ 1.8e-03  4.0e-03  1.1e-04]
   [ 1.6e-03  3.7e-03  3.2e-04]
   [ 1.2e-03  3.4e-03  5.9e-04]
   [ 7.4e-04  3.4e-03  8.6e-04]
   [ 2.4e-04  3.5e-03  1.0e-03]
   [-1.8e-04  3.7e-03  1.0e-03]
   [-6.2e-04  3.9e-03  8.5e-04]
   [-9.7e-04  4.0e-03  3.9e-04]
   [-1.5e-03  3.8e-03  8.9e-05]
   [-1.7e-03  3.4e-03 -1.7e-04]
   [-2.1e-03  3.0e-03 -2.2e-04]
   [-2.3e-03  2.5e-03 -5.8e-06]
   [-2.7e-03  2.3e-03  3.2e-04]
   [-3.2e-03  2.3e-03  6.7e-04]
   [-3.5e-03  2.5e-03  1.0e-03]
   [-4.0e-03  2.8e-03  1.0e-03]
   [-4.6e-03  2.9e-03  9.7e-04]
   [-5.1e-03  2.9e-03  6.9e-04]
   [-5.4e-03  2.8e-03  3.4e-04]
   [-5.8e-03  2.5e-03  5.3e-05]
   [-6.0e-03  2.0e-03 -1.2e-04]
   [-6.0e-03  2.0e-03  1.1e-03]
   [-5.5e-03  1.8e-03  9.9e-04]
   [-5.1e-03  1.7e-03  7.3e-04]
   [-4.7e-03  1.8e-03  4.0e-04]
   [-4.3e-03  2.1e-03  1.1e-04]
   [-4.1e-03  2.5e-03 -1.5e-04]
   [-3.7e-03  2.9e-03 -2.3e-04]
   [-3.3e-03  3.3e-03 -3.4e-05]
   [-3.0e-03  3.5e-03  3.7e-04]
   [-2.6e-03  3.4e-03  7.2e-04]
   [-2.1e-03  3.2e-03  9.3e-04]
   [-2.1e-03  4.6e-03  1.6e-03]
   [-2.2e-03  5.1e-03  1.4e-03]
   [-2.3e-03  5.5e-03  1.4e-03]
   [-2.1e-03  6.1e-03  1.3e-03]
   [-1.7e-03  6.5e-03  1.2e-03]
   [-1.4e-03  6.7e-03  8.6e-04]
   [-9.9e-04  6.7e-03  5.3e-04]
   [-6.8e-04  6.8e-03  8.2e-05]
   [-6.4e-04  6.8e-03 -4.7e-04]
   [-7.8e-04  6.9e-03 -9.7e-04]
   [-9.4e-04  7.1e-03 -1.4e-03]
   [-1.0e-03  7.6e-03 -1.6e-03]
   [-8.0e-04  8.0e-03 -1.8e-03]
   [-1.6e-03  8.9e-03 -1.9e-03]
   [-1.4e-03  8.2e-03 -2.6e-03]
   [-1.8e-03  8.4e-03 -3.2e-03]
   [-1.4e-03  8.4e-03 -3.1e-03]
   [-9.0e-04  8.3e-03 -2.9e-03]
   [-6.0e-04  8.7e-03 -2.7e-03]
   [-6.2e-04  9.1e-03 -2.5e-03]
   [-5.5e-04  9.3e-03 -2.0e-03]
   [-6.2e-04  7.9e-03 -6.4e-04]
   [-1.0e-03  7.9e-03 -4.1e-04]
   [-1.5e-03  7.5e-03 -3.7e-04]
   [-1.8e-03  7.0e-03 -3.9e-04]
   [-1.8e-03  6.5e-03 -1.8e-04]
   [-1.7e-03  6.0e-03 -3.9e-05]
   [-1.5e-03  5.7e-03  2.3e-04]
   [-1.2e-03  5.6e-03  6.1e-04]
   [-1.1e-03  5.4e-03  1.1e-03]
   [-1.1e-03  5.3e-03  1.6e-03]
   [-1.2e-03  5.2e-03  2.1e-03]
   [-1.5e-03  5.2e-03  2.5e-03]
   [-2.0e-03  5.2e-03  2.8e-03]
   [-2.3e-03  4.9e-03  3.0e-03]
   [-2.6e-03  4.5e-03  3.4e-03]
   [-2.6e-03  4.0e-03  3.7e-03]
   [-2.4e-03  3.6e-03  4.1e-03]
   [-2.1e-03  3.5e-03  4.4e-03]
   [-1.8e-03  3.5e-03  4.8e-03]
   [-1.7e-03  3.7e-03  5.3e-03]
   [-1.7e-03  4.1e-03  5.7e-03]
   [-1.9e-03  4.4e-03  6.1e-03]]
# ---
# name: TestOXDNAReading.test_univ_snapshot.1
  ['C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C'
   'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C'
   'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C'
   'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C'
   'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C'
   'C' 'C' 'C' 'C' 'C' 'C' 'C' 'C']
# ---
# name: TestOXDNAReading.test_univ_snapshot.2
  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
# ---
# name: TestOXDNAReading.test_univ_snapshot.3
  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
   2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
   3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]
# ---
