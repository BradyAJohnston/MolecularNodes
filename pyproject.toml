[project]
name = "molecularnodes"
version = "4.4.0"
description = "Toolbox for molecular animations with Blender and Geometry Nodes."
readme = "README.md"
dependencies = [
    "databpy>=0.0.18",
    "MDAnalysis>=2.7.0",
    "biotite>=1.1",
    "mrcfile",
    "starfile",
]
maintainers = [{ name = "Brady Johnston", email = "brady.johnston@me.com" }]
requires-python = "~=3.11"

[project.urls]
Homepage = "https://bradyajohnston.github.io/MolecularNodes"
Repository = "https://github.com/bradyajohnston/MolecularNodes"
Documentation = "https://bradyajohnston.github.io/MolecularNodes"

[project.optional-dependencies]
bpy = ["bpy>=4.4"]
jupyter = ["jupyter", "IPython"]
dev = ["pytest", "pytest-cov", "syrupy", "scipy", "fake-bpy-module", "IPython"]
test = ["pytest", "pytest-cov", "syrupy", "scipy", "IPython", "pytest-xdist"]
docs = ["quartodoc", "tomlkit", "nodepad", "jupyter", "IPython"]

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0"]

[tool.setuptools]
include-package-data = true
packages = ["molecularnodes"]

[tool.setuptools.package-data]
molecularnodes = ["assets/*", "assets/template/*", "**/*.py"]


[tool.ruff.lint]
# pyflakes, pycodestyle isort and varibale naming
select = ["F", "E", "W", "I", "TID", "N"]
ignore = [
    # In docstrings long lines are often intentional
    # Most other ocassions are caught by the ruff formatter
    "E501",
    # Due to constants and class placeholders defined in functions
    "N806",
]

[tool.ruff.lint.isort]
# No separator lines between import sections
no-lines-before = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
order-by-type = true
known-first-party = ["biotite"]


# these need to be gone through ....
[tool.ruff.lint.per-file-ignores]
"molecularnodes/entities/trajectory/base.py" = ["TID252", 'N813']
"molecularnodes/entities/trajectory/io.py" = ["TID252", 'N813']
# N813 Camelcase `MDAnalysis` imported as lowercase `mda`
"molecularnodes/entities/trajectory/oxdna.py" = ['TID252']
# N813 Camelcase `MDAnalysis` imported as lowercase `mda`
"molecularnodes/entities/trajectory/selections.py" = ['N813']
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
"molecularnodes/scene/base.py" = ["TID252"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
"molecularnodes/session.py" = ["N801"]
# TID252 Prefer absolute imports over relative imports from parent modules
"molecularnodes/style/interface.py" = ["TID252"]
# TID252 Prefer absolute imports over relative imports from parent modules
"molecularnodes/ui/addon.py" = ["TID252"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
"molecularnodes/ui/node_menu.py" = ["N801", "N802"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
"molecularnodes/ui/ops.py" = ["N801", "TID252", "N813"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
# TID252 Prefer absolute imports over relative imports from parent modules
# F841 Local variable `layout` is assigned to but never used
"molecularnodes/ui/panel.py" = ["N801", "TID252", "F841"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
# TID252 Prefer absolute imports over relative imports from parent modules
"molecularnodes/ui/pref.py" = ["N801", "TID252"]
# Class name `MN_UL_TrajectorySelectionListUI` should use CapWords convention
# TID252 Prefer absolute imports over relative imports from parent modules
"molecularnodes/ui/props.py" = ["N801", "TID252"]
#F401 [*] `openvdb` imported but unused
"tests/test_density.py" = ['F401']
#N813 Camelcase `MDAnalysis` imported as lowercase `mda`
# N813 Camelcase `MDAnalysis` imported as lowercase `mda`
"tests/test_dna.py" = ["F401", "N813"]
# CamelCase `Rotation` imported as acronym `R`
"tests/test_session.py" = ["F401"]
# CamelCase `Rotation` imported as acronym `R`
"tests/test_star.py" = ["N817"]
# Camelcase `MDAnalysis` imported as lowercase `mda`
"tests/test_trajectory.py" = ["N813"]
