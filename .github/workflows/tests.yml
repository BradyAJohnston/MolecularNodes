name: test-addon

on: 
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "4.1"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        blender-version: ["4.1.0"]
        python-version: ['3.11.7']
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      # - run: pip install bpy==${{ matrix.blender-version }}
      - name: Install
        run: |
          pip install poetry
          poetry install --with=dev
      
      - name: Install pyopenvdb
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd $(poetry run python -c "import os; import bpy; print(os.path.dirname(bpy.__file__)+'/../../../../../')")
          svn export https://svn.blender.org/svnroot/bf-blender/trunk/lib/linux_x86_64_glibc_228/python/lib/python3.10/site-packages/pyopenvdb.so@r63589
          pip install patchelf
          patchelf --set-rpath '$ORIGIN/bpy/lib' pyopenvdb.so
          
      - name: Run Tests
        run: poetry run python -m pytest --verbose --cov=molecularnodes --cov-report=xml:coverage.xml --ignore=molecularnodes/ui/panel.py -k "not star"

      - name: Expose coverage as a CI download # Related to test_addon_blender_advanced.py
        uses: actions/upload-artifact@v1
        with:
          name: coverage.xml
          path: coverage.xml
      # setup ssh to check on file system state
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
