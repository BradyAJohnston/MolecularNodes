name: test-in-blender

on: 
    push:
      branches: ["main"]
    pull_request:
      branches: ["main", "4.4"]
    
jobs:
    test-blender:
        runs-on: ${{ matrix.os }}
        strategy:
            max-parallel: 4
            fail-fast: false
            matrix:
              version: ["4.4", "daily"]
              os: [ubuntu-latest, macos-14, windows-latest]
        steps:
            - uses: actions/checkout@v4
            - uses: BradyAJohnston/setup-blender@v3
              with:
                version: ${{ matrix.version }}
            - name: Install in Blender
              run: |
                blender -b -P tests/python.py -- -m pip install ".[test]"
            - name: Run Tests
              run: |
                blender -b -P tests/run.py -- -vv tests --cov --cov-report=xml
    
            - name: Expose coverage as a CI download 
              uses: actions/upload-artifact@v4
              if: matrix.os == 'ubuntu-latest' && matrix.version == '4.2.5'
              with:
                name: coverage.xml
                path: coverage.xml

            - name: Upload coverage reports to Codecov
              if: matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v3
    
    test-bpy:
        runs-on: ${{ matrix.os }}
        strategy:
            max-parallel: 4
            fail-fast: false
            matrix:
              version: ["4.4"]
              os: [ubuntu-latest, macos-14, windows-latest]
        steps:
            - uses: actions/checkout@v4
            - name: Install uv
              uses: astral-sh/setup-uv@v5
            - name: Install in Blender
              run: |
                uv venv --python=3.11
                uv pip install ".[test]"
                uv pip install -e .
            - name: Run Tests
              run: |
                uv python -m pytest -n auto -k "not density"
                uv python -m pytest -k density
      
