name: docs-build-deploy

on:
  workflow_dispatch:
  push:
    branches: ["main", "docs-*"]
  pull_request: 
    branches: ["*"]
  release:
    types: [published]

jobs:
  build-docs:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: pip
      - name: Install dependencies
        run: |
          make template
          pip install quartodoc
          pip install .
      - uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: "1.4.549"
      - name: Build docs
        run: |
          python docs/build_node_docs.py
          make docs-build
      # push to netlify -------------------------------------------------------

      # set release name ----

      - name: Configure pull release name
        if: ${{github.event_name == 'pull_request'}}
        run: |
          echo "RELEASE_NAME=pr-${PR_NUMBER}" >> $GITHUB_ENV
        env:
          PR_NUMBER: ${{ github.event.number }}
      - name: Configure branch release name
        if: ${{github.event_name != 'pull_request'}}
        run: |
          # use branch name, but replace slashes. E.g. feat/a -> feat-a
          echo "RELEASE_NAME=${GITHUB_REF_NAME/\//-}" >> $GITHUB_ENV
      # deploy ----

      - name: Create Github Deployment
        uses: bobheadxi/deployments@v0.4.3
        if: github.event.pull_request.head.repo.full_name == github.repository
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.RELEASE_NAME }}
          ref: ${{ github.head_ref }}
          transient: true
          logs: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Netlify docs preview
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: |
          npm install -g netlify-cli
          # push main branch to production, others to preview --
          if [ "${ALIAS}" == "main" ]; then
            netlify deploy --dir=docs/_build --alias="main"
          else
            netlify deploy --dir=docs/_build --alias="${ALIAS}"
          fi
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          ALIAS: ${{ steps.deployment.outputs.env }}

      - name: Update Github Deployment
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: bobheadxi/deployments@v0.4.3
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: 'https://${{ steps.deployment.outputs.env }}--molecularnodes.netlify.app'
          logs: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          
      - name: Deploy Release Documentation
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'release'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build
