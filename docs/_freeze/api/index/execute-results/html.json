{
  "hash": "eda63f99572f8a5309228e67b0fd3599",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Python API\ndescription: Introduction to the APi and the quirks of programming in Blender\njupyter: python3\nexecute: \n  freeze: auto\n  cache: true\n---\n\n\n\n\n::: {.callout-warning}\n# The API is Unstable\n\nMolecular Nodes is designed and created first and foremost as an add-on for Blender, so the API can at times seem a bit quirky and for the time being is not to be considered stable.\n\nMolecular Nodes is versioned to match Blender versions, so while we are currently up to \"4.2.*\", the  API should be not be consired to be that mature.\n:::\n\nThis is how we can use the API.\n\n\n\n::: {#9f1bfb84 .cell execution_count=2}\n``` {.python .cell-code}\nimport molecularnodes as mn\nimport numpy as np\n\n# we currently have to manually register a lot of the internals with Blender\nmn.register()\nmn.template.install()\n\n\n# create a 'Molecule' object, by fetching a structure and parsing it into the scene\nmol = mn.Molecule.fetch(\"6N2Y\").add_style('ribbon')\n```\n:::\n\n\n## The Molecule Object\n\nThe `Molecule` object has the original data, as well as the Blender object associated with.\n\nThe different methods that are associated mostly interact with the Blender object, which is accessible via the `mol.object`, and the data is accessible via `mol.array`, which is a `biotite.AtomArray` object.\n\n::: {#2893c732 .cell execution_count=3}\n``` {.python .cell-code}\nprint(f\"{len(mol)=}\")\nprint(f\"{mol.object=}\")\nprint(f\"{mol.array[0][:10]=}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlen(mol)=35043\nmol.object=bpy.data.objects['6N2Y']\nmol.array[0][:10]=array([\n\tAtom(np.array([165.781, 162.453, 265.828], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"N\", element=\"N\", atom_id=1, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=14.0067, atomic_number=7, res_name_int=15, chain_id_int=0, vdw_radii=0.015500000000000002, atom_name_int=1, charge=-0.4157, lipophobicity=-0.49, Color=[0.18823529 0.31372549 0.97254902 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([165.694, 163.886, 266.083], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"CA\", element=\"C\", atom_id=2, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=12.0107, atomic_number=6, res_name_int=15, chain_id_int=0, vdw_radii=0.017, atom_name_int=2, charge=-0.0249, lipophobicity=0.02, Color=[0.83921569 0.35686275 0.35686275 0.00392157], is_alpha_carbon=True, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([166.549, 164.278, 267.281], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"C\", element=\"C\", atom_id=3, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=12.0107, atomic_number=6, res_name_int=15, chain_id_int=0, vdw_radii=0.017, atom_name_int=3, charge=0.5973, lipophobicity=-0.61, Color=[0.83921569 0.35686275 0.35686275 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([166.099, 165.005, 268.165], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"O\", element=\"O\", atom_id=4, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=15.9994, atomic_number=8, res_name_int=15, chain_id_int=0, vdw_radii=0.0152, atom_name_int=4, charge=-0.5679, lipophobicity=-0.58, Color=[1.         0.05098039 0.05098039 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([164.24 , 164.303, 266.314], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"CB\", element=\"C\", atom_id=5, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=12.0107, atomic_number=6, res_name_int=15, chain_id_int=0, vdw_radii=0.017, atom_name_int=5, charge=0.2117, lipophobicity=0.45, Color=[0.83921569 0.35686275 0.35686275 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=False, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=True, is_carb=False),\n\tAtom(np.array([164.147, 165.689, 266.594], dtype=float32), chain_id=\"A\", res_id=2, ins_code=\"\", res_name=\"SER\", hetero=False, atom_name=\"OG\", element=\"O\", atom_id=6, b_factor=99.36, occupancy=1.0, sec_struct=3, entity_id=0, mass=15.9994, atomic_number=8, res_name_int=15, chain_id_int=0, vdw_radii=0.0152, atom_name_int=9, charge=-0.6546, lipophobicity=-0.99, Color=[1.         0.05098039 0.05098039 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=False, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=True, is_carb=False),\n\tAtom(np.array([167.783, 163.792, 267.302], dtype=float32), chain_id=\"A\", res_id=3, ins_code=\"\", res_name=\"ILE\", hetero=False, atom_name=\"N\", element=\"N\", atom_id=7, b_factor=93.91, occupancy=1.0, sec_struct=3, entity_id=0, mass=14.0067, atomic_number=7, res_name_int=9, chain_id_int=0, vdw_radii=0.015500000000000002, atom_name_int=1, charge=-0.4157, lipophobicity=-0.49, Color=[0.18823529 0.31372549 0.97254902 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([168.702, 164.083, 268.395], dtype=float32), chain_id=\"A\", res_id=3, ins_code=\"\", res_name=\"ILE\", hetero=False, atom_name=\"CA\", element=\"C\", atom_id=8, b_factor=93.91, occupancy=1.0, sec_struct=3, entity_id=0, mass=12.0107, atomic_number=6, res_name_int=9, chain_id_int=0, vdw_radii=0.017, atom_name_int=2, charge=-0.0597, lipophobicity=0.02, Color=[0.83921569 0.35686275 0.35686275 0.00392157], is_alpha_carbon=True, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([169.366, 165.434, 268.145], dtype=float32), chain_id=\"A\", res_id=3, ins_code=\"\", res_name=\"ILE\", hetero=False, atom_name=\"C\", element=\"C\", atom_id=9, b_factor=93.91, occupancy=1.0, sec_struct=3, entity_id=0, mass=12.0107, atomic_number=6, res_name_int=9, chain_id_int=0, vdw_radii=0.017, atom_name_int=3, charge=0.5973, lipophobicity=-0.61, Color=[0.83921569 0.35686275 0.35686275 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False),\n\tAtom(np.array([169.633, 165.817, 266.999], dtype=float32), chain_id=\"A\", res_id=3, ins_code=\"\", res_name=\"ILE\", hetero=False, atom_name=\"O\", element=\"O\", atom_id=10, b_factor=93.91, occupancy=1.0, sec_struct=3, entity_id=0, mass=15.9994, atomic_number=8, res_name_int=9, chain_id_int=0, vdw_radii=0.0152, atom_name_int=4, charge=-0.5679, lipophobicity=-0.58, Color=[1.         0.05098039 0.05098039 0.00392157], is_alpha_carbon=False, is_solvent=False, is_backbone=True, is_nucleic=False, is_peptide=True, is_hetero=False, is_side_chain=False, is_carb=False)\n])\n```\n:::\n:::\n\n\n::: {#fcb684c5 .cell execution_count=4}\n``` {.python .cell-code}\nmol.named_attribute('chain_id')\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\narray([0, 0, 0, ..., 5, 5, 5])\n```\n:::\n:::\n\n\n::: {#f8910514 .cell execution_count=5}\n``` {.python .cell-code}\nmol.position\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([[1.65780997, 1.62452996, 2.6582799 ],\n       [1.65693998, 1.63885999, 2.66083002],\n       [1.66548991, 1.64277995, 2.67281008],\n       ...,\n       [1.37845004, 1.57386994, 2.16669989],\n       [1.38423002, 1.5675199 , 2.17714   ],\n       [1.39749992, 1.55744004, 2.29000998]])\n```\n:::\n:::\n\n\n### Updating the Atom Positions\n\n::: {#1429a595 .cell execution_count=6}\n``` {.python .cell-code}\nmol.position -= mol.centroid()\nmol.position\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\narray([[-0.0113072 , -0.03149763,  0.58922708],\n       [-0.01217719, -0.0171676 ,  0.59177721],\n       [-0.00362726, -0.01324764,  0.60375726],\n       ...,\n       [-0.29066715, -0.08215764,  0.09764704],\n       [-0.28488716, -0.08850768,  0.10808715],\n       [-0.27161726, -0.09858754,  0.22095713]])\n```\n:::\n:::\n\n\n::: {#9b9acc52 .cell execution_count=7}\n``` {.python .cell-code}\nimport os\ncanvas = mn.scene.Canvas()\ncanvas.resolution = (720, 480)\n\ncodes = [\"4ozs\", \"8H1B\", \"8U8W\"]\nstyles = ['cartoon', 'ribbon', 'spheres']\nmaterials = ['MN Ambient Occlusion', 'MN Default', 'MN Ambient Occlusion']\n\nfor code, style, material in zip(codes, styles, materials):\n        canvas.scene_reset()\n        canvas.samples_cycles = 32\n        canvas.render_engine = \"CYCLES\"\n        canvas.cycles_device = \"GPU\"\n        bpy.context.preferences.addons[\"cycles\"].preferences.compute_device_type = \"OPTIX\" \n        mol = mn.Molecule.fetch(code)\n        canvas.frame_object(mol)\n        mol.add_style(style)\n        canvas.snapshot()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-2.png){}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-3.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}