{
  "hash": "376940a29e927b7a2637804b414f7828",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Styles\nengine: jupyter\nexecute: \n  freeze: auto\n  cache: true\n---\n\n\n\n\nThis is how we can add styles or representations of our molecular data, so we can actually see something.\n\n::: {#1bf33aa3 .cell execution_count=1}\n``` {.python .cell-code}\nimport molecularnodes as mn\nmn.register()\nmn.assets.install()\ncan = mn.Canvas()\ncan.scene_reset()\ncan.resolution = (860, 540)\ncan.render_engine = \"EEVEE\"\n```\n:::\n\n\n::: {#c7694696 .cell execution_count=2}\n``` {.python .cell-code}\nmol = (\n    mn.Molecule.fetch(\"8H1B\")\n    .add_style(\"cartoon\", material = mn.material.AmbientOcclusion())\n    .add_style(\n        style=\"surface\",\n        selection=\"is_peptide\",\n        color=(0.6, 0.6, 0.8, 1.0),\n        material=mn.material.TransparentOutline()\n        )\n)\ncan.frame_object(mol)\ncan.snapshot()\n```\n\n::: {.cell-output .cell-output-display}\n![](styles_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\n::: {#df3b427b .cell execution_count=3}\n``` {.python .cell-code}\nmol.styles[0].remove()\ncan.snapshot()\n```\n\n::: {.cell-output .cell-output-display}\n![](styles_files/figure-html/cell-4-output-1.png){}\n:::\n:::\n\n\n::: {#49ab6f34 .cell execution_count=4}\n``` {.python .cell-code}\nmol.add_style('ribbon', selection=\"is_peptide\").add_style('surface', selection=\"is_nucleic\")\nmol.styles[1].radius = 1.5\nmol.styles[1].quality = 5\nmol.styles[1].material = mn.material.AmbientOcclusion()\ncan.snapshot()\n```\n\n::: {.cell-output .cell-output-display}\n![](styles_files/figure-html/cell-5-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "styles_files"
    ],
    "filters": [],
    "includes": {}
  }
}