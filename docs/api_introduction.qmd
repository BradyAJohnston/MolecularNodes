---
title: Python API
description: Introduction to the APi and the quirks of programming in Blender
jupyter: python3
---

::: {.callout-warning}
# The API is Unstable

Molecular Nodes is designed and created first and foremost as an add-on for Blender, so the API can at times seem a bit quirky and for the time being is not to be considered stable. 

Molecular Nodes is versioned to match Blender versions, so while we are currently up to "4.2.*", the  API should be not be consired to be that mature.
:::

This is how we can use the API.

```{python}
#| echo: false
#| output: false
import bpy
bpy.ops.wm.read_homefile(app_template="")
```

```{python}
import molecularnodes as mn
import numpy as np

# we currently have to manually register a lot of the internals with Blende
mn.register()

# create a 'Molecule' object, by fetching a structure and parsing it into the scene
mol = mn.fetch("1cd3")
mol
```

## The Molecule Object

The `Molecule` object has the original data, as well as the Blender object associated with.

The different methods that are associated mostly interact with the Blender object, which is accessible via the `mol.object`, and the data is accessible via `mol.array`, which is the `biotite.AtomArrayStack` object.
```{python}
print(f"{len(mol)=}")
print(f"{mol.object=}")
print(f"{mol.array[0][:10]=}")
```

```{python}
mol.named_attribute('chain_id')
```

```{python}
np.array(mol.object['chain_ids'])[mol.named_attribute('chain_id')]
```